// <auto-generated />
using System;
using Karnosh.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Karnosh.Migrations
{
    [DbContext(typeof(KarnoshContext))]
    partial class KarnoshContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GeneresVideo", b =>
                {
                    b.Property<int>("GeneresId")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("GeneresId", "VideoId");

                    b.HasIndex("VideoId");

                    b.ToTable("GeneresVideo");
                });

            modelBuilder.Entity("HeroVideo", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("HeroId", "VideoId");

                    b.HasIndex("VideoId");

                    b.ToTable("HeroVideo");
                });

            modelBuilder.Entity("Karnosh.Models.Catagory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Catagory");
                });

            modelBuilder.Entity("Karnosh.Models.Duration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Time")
                        .IsUnique();

                    b.ToTable("Duration");
                });

            modelBuilder.Entity("Karnosh.Models.Generes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Generes");
                });

            modelBuilder.Entity("Karnosh.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Heroe");
                });

            modelBuilder.Entity("Karnosh.Models.Quality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Quality");
                });

            modelBuilder.Entity("Karnosh.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Rate")
                        .IsUnique();

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("Karnosh.Models.Related", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Related");
                });

            modelBuilder.Entity("Karnosh.Models.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("VideoId");

                    b.ToTable("Server");
                });

            modelBuilder.Entity("Karnosh.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CatagoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationId")
                        .HasColumnType("int");

                    b.Property<string>("Galary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OriginalLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QualityId")
                        .HasColumnType("int");

                    b.Property<int?>("RatingId")
                        .HasColumnType("int");

                    b.Property<string>("Traler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearId")
                        .HasColumnType("int");

                    b.Property<string>("otherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatagoryId");

                    b.HasIndex("DurationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("QualityId");

                    b.HasIndex("RatingId");

                    b.HasIndex("YearId");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("Karnosh.Models.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Year");
                });

            modelBuilder.Entity("RelatedVideo", b =>
                {
                    b.Property<int>("RelatedId")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("RelatedId", "VideoId");

                    b.HasIndex("VideoId");

                    b.ToTable("RelatedVideo");
                });

            modelBuilder.Entity("GeneresVideo", b =>
                {
                    b.HasOne("Karnosh.Models.Generes", null)
                        .WithMany()
                        .HasForeignKey("GeneresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karnosh.Models.Video", null)
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeroVideo", b =>
                {
                    b.HasOne("Karnosh.Models.Hero", null)
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karnosh.Models.Video", null)
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Karnosh.Models.Server", b =>
                {
                    b.HasOne("Karnosh.Models.Video", "Video")
                        .WithMany("Servers")
                        .HasForeignKey("VideoId");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Karnosh.Models.Video", b =>
                {
                    b.HasOne("Karnosh.Models.Catagory", "Catagory")
                        .WithMany("Video")
                        .HasForeignKey("CatagoryId");

                    b.HasOne("Karnosh.Models.Duration", "Duration")
                        .WithMany("Video")
                        .HasForeignKey("DurationId");

                    b.HasOne("Karnosh.Models.Quality", "Quality")
                        .WithMany("Video")
                        .HasForeignKey("QualityId");

                    b.HasOne("Karnosh.Models.Rating", "Rating")
                        .WithMany("Video")
                        .HasForeignKey("RatingId");

                    b.HasOne("Karnosh.Models.Year", "Year")
                        .WithMany("Video")
                        .HasForeignKey("YearId");

                    b.Navigation("Catagory");

                    b.Navigation("Duration");

                    b.Navigation("Quality");

                    b.Navigation("Rating");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("RelatedVideo", b =>
                {
                    b.HasOne("Karnosh.Models.Related", null)
                        .WithMany()
                        .HasForeignKey("RelatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karnosh.Models.Video", null)
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Karnosh.Models.Catagory", b =>
                {
                    b.Navigation("Video");
                });

            modelBuilder.Entity("Karnosh.Models.Duration", b =>
                {
                    b.Navigation("Video");
                });

            modelBuilder.Entity("Karnosh.Models.Quality", b =>
                {
                    b.Navigation("Video");
                });

            modelBuilder.Entity("Karnosh.Models.Rating", b =>
                {
                    b.Navigation("Video");
                });

            modelBuilder.Entity("Karnosh.Models.Video", b =>
                {
                    b.Navigation("Servers");
                });

            modelBuilder.Entity("Karnosh.Models.Year", b =>
                {
                    b.Navigation("Video");
                });
#pragma warning restore 612, 618
        }
    }
}
